name: Coverage report

on:
  push:
    branches: [ tests ]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            COMPILER: gcc
            LINKER: gcc
            CPP_COMPILER: g++-3.4
            LIBRARY_PATH: /usr/lib/x86_64-linux-gnu:$LIBRARY_PATH
            BUILD_LIB_SCRIPT: build_lib.sh
            BUILD_SCRIPT: build_tests.sh
            RUN_SCRIPT: run_tests.sh
            SETUP_SCRIPT: |
              echo "deb     [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              echo "deb-src [trusted=yes] http://old-releases.ubuntu.com/ubuntu/ hardy universe" | sudo tee -a /etc/apt/sources.list
              #echo "deb     http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              #echo "deb-src http://snapshot.debian.org/archive/debian/20070730T000000Z/ lenny main" | sudo tee -a /etc/apt/sources.list
              #echo "deb     http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              #echo "deb-src http://snapshot.debian.org/archive/debian-security/20070730T000000Z/ lenny/updates main" | sudo tee -a /etc/apt/sources.list
              sudo apt-get update
              sudo -E apt-get -yq --no-install-suggests --no-install-recommends install gcc-3.4 g++-3.4 gcc-multilib g++-multilib
              dpkg --list | grep compiler
              sudo /sbin/ldconfig -p | grep libgcc
              sudo ln -s /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/libgcc_s.so.1
              cd ./stdex
              chmod a+rwx ./build_lib.sh
              cd ..
              chmod a+rwx ./build_tests.sh
              chmod a+rwx ./run_tests.sh
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.7'
    steps:
    - uses: actions/checkout@master
    - name: setup enviroment
      run: ${{matrix.SETUP_SCRIPT}}
    - name: build lib
      env:
        COMPILER: ${{ matrix.CPP_COMPILER }}
        LIBRARY_PATH: ${{ matrix.LIBRARY_PATH }}
        CODE_COVERAGE_FLAGS: -fprofile-arcs -ftest-coverage
        CODE_COVERAGE_LIBS: -lgcov
      run: |
        cd ./stdex
        ./${{ matrix.BUILD_LIB_SCRIPT }}
        cd ..
    - name: build tests
      env:
        COMPILER: ${{ matrix.CPP_COMPILER }}
        LIBRARY_PATH: ${{ matrix.LIBRARY_PATH }}
        CODE_COVERAGE_FLAGS: -fprofile-arcs -ftest-coverage
        CODE_COVERAGE_LIBS: -lgcov
      run: |
        ./${{ matrix.BUILD_SCRIPT }}
    - name: run tests
      run: |
        ./${{ matrix.RUN_SCRIPT }}
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Generate coverage report
      run: |
        chmod +x ./get_code_cov.sh
        ./get_code_cov.sh
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        root_dir: ./
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        verbose: true